<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[David van Geest]]></title>
  <link href="http://davidvg.com/atom.xml" rel="self"/>
  <link href="http://davidvg.com/"/>
  <updated>2012-04-13T16:55:05-04:00</updated>
  <id>http://davidvg.com/</id>
  <author>
    <name><![CDATA[David van Geest]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Removing newlines from Logging events]]></title>
    <link href="http://davidvg.com/2012/04/13/removing-newlines-from-logging-events/"/>
    <updated>2012-04-13T15:53:00-04:00</updated>
    <id>http://davidvg.com/2012/04/13/removing-newlines-from-logging-events</id>
    <content type="html"><![CDATA[<p>I added the <a href="https://github.com/TwP/logging">Logging gem</a> to a project
I&#8217;m working on, and so far I like it a lot.  It is modelled after
<a href="http://logging.apache.org/log4j/">log4j</a>
and, as such, allows you to send logs to syslog (our main usage for it).</p>

<p>One issue that I&#8217;ve run into with using syslog(-ng) as a Rails logger is
that Rails tends to spit out multi-line log events.  Unless you have a
very new version of syslog-ng, this may cause syslog to interpret each
new line as a new event.  Unfortunately subsequent lines get written
with a blank program identification, which can cause filtering rules in
syslog-ng to break.</p>

<p>My solution to this was to monkeypatch the <code>Logging::LogEvent</code> with an
Around Alias.  This causes the <code>data</code> accessor to return a string with
the newlines substituted with a different delimiter, <code>&lt;&lt;</code> in this
case.  I added the Around Alias to the end of the <code>config/logging.rb</code>
file:</p>

<figure class='code'><figcaption><span>config/logging.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Other config here...</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># This is a hack to remove new lines from our log data</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Logging</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">LogEvent</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">data_with_stripped_newlines</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">data_without_stripped_newlines</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="s2">&quot; &gt;&gt; &quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">alias_method_chain</span> <span class="ss">:data</span><span class="p">,</span> <span class="ss">:stripped_newlines</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>So far it&#8217;s working quite nicely.  Any better ways of doing it?  Let me
know!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reviewing your GitHub SSH key]]></title>
    <link href="http://davidvg.com/2012/03/07/reviewing-your-github-ssh-key/"/>
    <updated>2012-03-07T13:26:00-05:00</updated>
    <id>http://davidvg.com/2012/03/07/reviewing-your-github-ssh-key</id>
    <content type="html"><![CDATA[<p>Those of you living in a cave may not have heard that someone recently
hacked GitHub to prove a point about default Rails mass-assignment settings.
You can read all the gory details <a href="https://github.com/blog/1068-public-key-security-vulnerability-and-mitigation">here</a>
and <a href="https://github.com/blog/1069-responsible-disclosure-policy">here</a>.</p>

<p>At any rate, GitHub sent an email notifying everyone that they are performing
an SSH key audit, and included a link to the audit page.</p>

<p>The page shows the SSH key&#8217;s fingerprint, but neglects to explain what it is
or how to check the fingerprint on your own system.  Here&#8217;s what you need to do:</p>

<ul>
<li>Locate your public SSH key, it&#8217;s likely at ~/.ssh/id_rsa.pub</li>
<li>Run this command (or similar, depending on your system) to get the key fingerprint, replacing id_rsa.pub with the location of your public key:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> ssh-keygen -lf id_rsa.pub
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>If the printed key fingerprint matches the fingerprint on GitHub, you&#8217;re good!  If not&#8230; follow their instructions and hope for the best :-P.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New city, new site!]]></title>
    <link href="http://davidvg.com/2012/01/26/new-city-new-site/"/>
    <updated>2012-01-26T15:55:00-05:00</updated>
    <id>http://davidvg.com/2012/01/26/new-city-new-site</id>
    <content type="html"><![CDATA[<p>So Jo and I moved to Toronto at the beginning of December, and things are going swimmingly.  I&#8217;m still working for
<a href="http://www.spindance.com">Spindance</a>, but now from the comfort of our home study.</p>

<p>Once things settled down a little, I got to work revamping davidvg.com.  Astute readers might note that I did the same thing last year,
<a href="http://davidvg.com/2011/03/11/60cycle-net-is-now-davidvg-com/">moving from 60cycleCMS to Typo</a>, and ask why I&#8217;m changing it up again.</p>

<p>One of the bigger problems was trying to host a full-blown Rails site on Dreamhost.  I like Dreamhost for the most part, but they&#8217;re really
not set up for Rails sites.  I sporadically had random application crashes, and the site was really slow at times.  Installing the right gems
was downright painful, although I imagine using Bundler would mitigate that considerably (I haven&#8217;t actually tried it).
What I really wanted to do was move davidvg.com to <a href="http://www.heroku.com">Heroku</a>.  I had previously moved <a href="http://pvanreenen.com">pvanreenen.com</a>
there (as well as porting it from PHP to Sinatra), and it was a very pleasent experience.</p>

<p>Typo is good, but it was really starting to bug me.  It&#8217;s weighed down by a lot of legacy code (although they&#8217;re working on that),
and I kept finding bugs that seemed to be un-squashable because of the huge and complex codebase.  There were some missing or non-functional features too,
like decent syntax highlighting and a comments system that played well with others.  That said, I was using an older version,
and I&#8217;m sure the newer versions are a lot better, but the thought of trying to upgrade Typo and merge my changes was making me ill.</p>

<p>A little bit of Googling revealed <a href="http://octopress.org">Octopress</a>.  It&#8217;s a static site generator based on <a href="https://github.com/mojombo/jekyll">Jekyll</a> that uses a lot of my favourite tools,
like Ruby and <a href="http://www.sinatrarb.com/">Sinatra</a>.  It had all the features I wanted, it was dead-easy to use, and it&#8217;s a great fit for Heroku.  I was hooked pretty quickly.</p>

<p>So, welcome to the new Heroku-hosted, Octopress-baked version of davidvg.com.  Do let me know if you see any rough edges!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Converting a Git repo to SVN]]></title>
    <link href="http://davidvg.com/2011/12/07/converting-a-git-repo-to-svn/"/>
    <updated>2011-12-07T00:00:00-05:00</updated>
    <id>http://davidvg.com/2011/12/07/converting-a-git-repo-to-svn</id>
    <content type="html"><![CDATA[<p>I know, usually people go the other way.  This is a bit of special case though:
a contractor had a project in git which we needed to import on our SVN server.
The contractor was only able to provide a zip of his repo, for various reasons.
This seems to preclude the widely used method detailed <a href="http://code.google.com/p/support/wiki/ImportingFromGit">here</a>.
I&#8217;m not enough of a git wizard to modify that for our specific situation.</p>

<p>Ironically enough, Mercurial provided the easiest solution.</p>

<p>Install Mercurial and a python subversion lib if you haven&#8217;t already (I&#8217;m using Ubuntu, adjust as necessary):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install mercurial python-subversion
</span></code></pre></td></tr></table></div></figure>


<p>Configure Mercurial to use the ConvertExtension.  Add this to ~/.hgrc:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>extensions<span class="o">]</span>
</span><span class='line'>hgext.convert<span class="o">=</span>
</span></code></pre></td></tr></table></div></figure>


<p>Use Mercurial to covert from git to svn:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>hg convert --dest-type svn path/to/git/repo path/to/new/svn/repo
</span></code></pre></td></tr></table></div></figure>


<p>Now you should have a directory with a full SVN repo, complete with commit history.<br/>
Note that the commit times will not be correct.</p>

<p>If needed, you can move your new SVN repo to another server using the
excellent instructions <a href="http://www.petefreitag.com/item/665.cfm">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hacking session maintenance with Authlogic and Factory Girl]]></title>
    <link href="http://davidvg.com/2011/10/28/hacking-session-maintenance-with-authlogic-and-factory-girl/"/>
    <updated>2011-10-28T00:00:00-04:00</updated>
    <id>http://davidvg.com/2011/10/28/hacking-session-maintenance-with-authlogic-and-factory-girl</id>
    <content type="html"><![CDATA[<p>I use <a href="https://github.com/binarylogic/authlogic">Authlogic</a> to provide
authentication for a couple Rails projects.  I also use <a href="https://github.com/thoughtbot/factory_girl">Factory Girl</a>
as a fixtures replacement.</p>

<p>When FG creates a User for you, a new UserSession automatically gets created.
This is by virtue of Authlogic&#8217;s automatic session maintenance, which
can be pretty handy.  However, in my tests I want complete control over
the UserSession.  Just because I created a new user, doesn&#8217;t mean I want
that user logged in.  In many cases, I <em>don&#8217;t</em> want the user to be
logged in, and this behavior was causing my tests to fail.</p>

<p>To work around this behaviour, I ended up adding this to my User factory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">after_create</span> <span class="k">do</span> <span class="o">|</span><span class="n">u</span><span class="o">|</span>
</span><span class='line'>  <span class="n">u</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">maintain_sessions</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>That quashed the autogenerated UserSession.  There might be a cleaner method somewhere, but so far this is doing the trick for me.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Excluding all attributes in options for to_json]]></title>
    <link href="http://davidvg.com/2011/10/18/excluding-all-attributes-in-options-for-to_json/"/>
    <updated>2011-10-18T00:00:00-04:00</updated>
    <id>http://davidvg.com/2011/10/18/excluding-all-attributes-in-options-for-to_json</id>
    <content type="html"><![CDATA[<p>Ran across a strange gotcha while working in Rails 3.0 today, having to
do with the <code>:only</code> option to the <code>to_json</code> method.</p>

<p>Let&#8217;s say you have a Widget on which you call <code>to_json</code>.  You don&#8217;t want
<em>any</em> of the widget&#8217;s attributes to appear in the JSON (maybe you only
want some method results).  Normally, one would expect this to do the trick:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="ss">:only</span> <span class="o">=&gt;</span> <span class="o">[]</span><span class="p">,</span> <span class="ss">:methods</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:foo</span><span class="p">,</span> <span class="ss">:bar</span><span class="o">]</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Strangely, this didn&#8217;t work.  I found I needed to put a nil in the empty
<code>:only</code> array, like so:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="ss">:only</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="kp">nil</span><span class="o">]</span><span class="p">,</span> <span class="ss">:methods</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:foo</span><span class="p">,</span> <span class="ss">:bar</span><span class="o">]</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>for everything to work as expected.</p>

<p>This might have something to do with the fact that I&#8217;m using the json
gem, but I haven&#8217;t had the time to dive into that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disabling the query cache and profiling MySQL]]></title>
    <link href="http://davidvg.com/2011/10/12/disabling-the-query-cache-and-profiling-mysql/"/>
    <updated>2011-10-12T00:00:00-04:00</updated>
    <id>http://davidvg.com/2011/10/12/disabling-the-query-cache-and-profiling-mysql</id>
    <content type="html"><![CDATA[<p>I&#8217;m constantly forgetting how to enable profiling and turn off query
caching in MySQL.  So for my own benefit, and possibly yours, here&#8217;s the
goods.</p>

<p>Turn off the query cache for your particular connection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SET</span> <span class="k">SESSION</span> <span class="n">query_cache_type</span> <span class="o">=</span> <span class="k">OFF</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Enable profiling for your connection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SET</span> <span class="n">profiling</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the query:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">widgets</span> <span class="k">WHERE</span> <span class="n">plant_id</span> <span class="o">=</span> <span class="mi">5</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">widget_id</span> <span class="k">DESC</span> <span class="k">LIMIT</span> <span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Show the profile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SHOW</span> <span class="n">profile</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>You&#8217;ll get something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>+----------------------+----------+
</span><span class='line'>| Status               | Duration |
</span><span class='line'>+----------------------+----------+
</span><span class='line'>| starting             | 0.000087 |
</span><span class='line'>| checking permissions | 0.000013 |
</span><span class='line'>| Opening tables       | 0.000106 |
</span><span class='line'>| System lock          | 0.000099 |
</span><span class='line'>| init                 | 0.000036 |
</span><span class='line'>| optimizing           | 0.000019 |
</span><span class='line'>| statistics           | 0.000311 |
</span><span class='line'>| preparing            | 0.000027 |
</span><span class='line'>| executing            | 0.000006 |
</span><span class='line'>| Sorting result       | 0.000006 |
</span><span class='line'>| Sending data         | 0.001665 |
</span><span class='line'>| end                  | 0.000011 |
</span><span class='line'>| query end            | 0.000008 |
</span><span class='line'>| closing tables       | 0.000023 |
</span><span class='line'>| freeing items        | 0.000034 |
</span><span class='line'>| logging slow query   | 0.000005 |
</span><span class='line'>| cleaning up          | 0.000006 |
</span><span class='line'>+----------------------+----------+
</span><span class='line'>17 rows in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Remember that the time in the right column actually corresponds to to
the operation in the row ABOVE.  So in this case, the operation that
took 0.001665 seconds was the <code>Sorting result</code> operation, not the
<code>Sending data</code> operation.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using a VirtualBox host-only interface when bridged interface is unavailable]]></title>
    <link href="http://davidvg.com/2011/04/04/using-a-virtualbox-host-only-interface-when-bridged-interface-is-unavailable/"/>
    <updated>2011-04-04T00:00:00-04:00</updated>
    <id>http://davidvg.com/2011/04/04/using-a-virtualbox-host-only-interface-when-bridged-interface-is-unavailable</id>
    <content type="html"><![CDATA[<p>On my current project, I use an Ubuntu Server virtual machine to run MySQL and Rails.  It makes it easy to keep my development environments for conflicting projects separate&#8230; my previous project used a different version of both MySQL and Rails.  For Ruby and Rails, this problem can be solved with <a href="http://rvm.beginrescueend.com/">RVM</a>, but that&#8217;s another story.</p>

<p>My Ubuntu VM has two network adapters, one bridged to eth0 on my host, and the second a host-only interface.  The idea here is that I still have network access to the VM when my wired connection on the host is down.  Imagine my suprise, however, when DHCP was failing on the host-only interface while the bridged network was down.  In theory, the host-only networking should work fine even if the host&#8217;s bridged interface is physically disconnected (I&#8217;m using wireless instead of my normal wired connection, so there&#8217;s nothing connected to my host&#8217;s Ethernet port).</p>

<p>After mucking about for a bit, I discovered the secret to host-only harmony.  I had to turn off the VM, then in VirtualBox go to Settings -> Network, select the tab for my bridged adapter, click Advanced, and un-check the &#8220;Cable Connected&#8221; box.  When I booted the VM again, the host-only adapter was able to DHCP an address on the host-only network, and I could be productive again :-).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing the StarCraft 2 Demo on Linux Mint]]></title>
    <link href="http://davidvg.com/2011/03/20/installing-the-starcraft-2-demo-on-linux-mint/"/>
    <updated>2011-03-20T00:00:00-04:00</updated>
    <id>http://davidvg.com/2011/03/20/installing-the-starcraft-2-demo-on-linux-mint</id>
    <content type="html"><![CDATA[<p>I&#8217;m an infrequent gamer, but occasionally I get bored enough to fire
something up, generally an RTS of some variety. Today was a rainy
Sunday, so I figured I would give StarCraft II a try. I don&#8217;t own the
game, and didn&#8217;t intend to buy it without trying it out on Linux, so I
installed the demo using <a href="http://www.winehq.org/">Wine</a>.</p>

<p>There&#8217;s a few walk-throughs on the web that I followed to get this
going, but none of them specifically addressed the demo. If you&#8217;re
trying to install the full version of the game, I suspect that
<a href="http://www.playonlinux.com/">PlayOnLinux</a> would be easier (see the
referenced walkthroughs for instructions).  But since PlayOnLinux
doesn&#8217;t support the demo, here&#8217;s what I did.  These instructions are for
Linux Mint, but they should work fine on Ubuntu without modification, or
other distros with a few small changes.</p>

<ul>
<li><p>To get the audio working correctly, I had to install wine1.3,
compiled with PulseAudio support (instead of wine1.2 which is in the
Mint 9 repositories).  I found a PPA for that <a href="https://launchpad.net/~c-korn/+archive/ppa">here</a>.
If you want, you can just download and install the .deb instead of
adding the whole PPA.</p></li>
<li><p>Get the latest winetricks script:</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://winezeug.googlecode.com/svn/trunk/winetricks
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Make it executable, and install some extras not included with Wine.
I&#8217;m not sure if all of these are needed, but these installed without
error for me:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod +x winetricks
</span><span class='line'>./winetricks droid fontfix fontsmooth-rgb vcrun2005 allfonts d3dx9 win7
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Some walk-throughs suggest installing gecko for wine, I did that the
following way:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget  http://winezeug.googlecode.com/svn/trunk/install-gecko.sh
</span><span class='line'>chmod +x install-gecko.sh
</span><span class='line'>sudo ./install-gecko.sh
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Configure Wine to use PulseAudio, if necessary:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>winecfg
</span></code></pre></td></tr></table></div></figure>


<p>   Then go to the &#8216;Audio&#8217; tab and select the PulseAudio Driver in the
   Sound Drivers tree.</p>

<ul>
<li><p>Configure Wine to disable mmdevapi.  In the Libraries tab, under
Existing Overrides, you may have mmdevapi listed.  Select it, click
Edit, and choose Disabled.  If it&#8217;s not in the list, some people
recommend adding it by finding mmdevapi in the above drop-down and
clicking Add, then disabling it as before.</p></li>
<li><p>Download the demo downloader from
<a href="https://us.battle.net/account/sc2-demo.html">here</a>.</p></li>
<li><p>Run the demo downloader using wine:</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod +x SC2-WingsOfLibertyDemo-enUS-downloader.exe
</span><span class='line'>wine SC2-WingsOfLibertyDemo-enUS-downloader.exe
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>The download is pretty big.  Go play outside :-).</p></li>
<li><p>When the downloader is complete, it will give you the option to
install the demo.  Go ahead and do that.</p></li>
<li><p>The demo installer adds a Desktop icon, and an icon in your Wine
menu.  At this point, you are hopefully good to go.  Performance
under Wine is not as good as on Windows, so you may have to tweak
your graphics settings.</p></li>
</ul>


<p>The demo was enjoyable, if a little tame.  I might consider buying the
game in the unlikely event that I suddenly find myself with a lot of
free time :-).  For reference, I used the following two sites to put
these steps together:</p>

<ul>
<li><a href="http://jeffhoogland.blogspot.com/2010/07/howto-starcraft-2-on-linux-with-wine.html">http://jeffhoogland.blogspot.com/2010/07/howto-starcraft-2-on-linux-with-wine.html</a></li>
<li><a href="http://www.retrohive.com/2010/08/20/play-starcraft-ii-linux/">http://www.retrohive.com/2010/08/20/play-starcraft-ii-linux/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What will happen to 60cycleCMS?]]></title>
    <link href="http://davidvg.com/2011/03/12/what-will-happen-to-60cyclecms/"/>
    <updated>2011-03-12T00:00:00-05:00</updated>
    <id>http://davidvg.com/2011/03/12/what-will-happen-to-60cyclecms</id>
    <content type="html"><![CDATA[<p>As a result of switching to Typo for davidvg.com, I will no longer be maintaining 60cycleCMS. However, it will still be available on SourceForge at <a href="http://sourceforge.net/projects/sixtycyclecms/">http://sourceforge.net/projects/sixtycyclecms/</a>. If you really want to use, fork it, or whatever, go right ahead; the code is licensed under a BSD license.</p>
<p>Frankly, I wouldn&#8217;t recommend using it for new websites. I wrote it when I didn&#8217;t know too much about web development, and it&#8217;s quite possible that it&#8217;s vulnerable to a few hacks (see <a href="http://davidvg.com/2010/03/27/supposed-security-vulnerabilities-in-60cyclecms">this post</a> for a discussion of some of them). So, consider yourself warned.</p>
<p>I, for one, welcome our new Typo overlords :-).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[60cycle.net is now davidvg.com!]]></title>
    <link href="http://davidvg.com/2011/03/11/60cycle-net-is-now-davidvg-com/"/>
    <updated>2011-03-11T00:00:00-05:00</updated>
    <id>http://davidvg.com/2011/03/11/60cycle-net-is-now-davidvg-com</id>
    <content type="html"><![CDATA[<p>
	So, regular readers of this site (all two of them) may have noticed that 60cycle.net wasn&#39;t getting a whole lot of love lately. &nbsp;There&#39;s a couple reasons for that. &nbsp;Number one, Jo and I tied the knot back in June (huzzah!), and number two, I was busy working on davidvg.com.</p>
<p>
	Why a new site, you ask? &nbsp;Good question. &nbsp;I wrote 60cycle.net and 60cycleCMS back when I didn&#39;t know a whole lot about web development. &nbsp;It was cool to learn some PHP and MySQL, but it didn&#39;t teach me a lot about actual web development strategies (MVC patterns, for example). &nbsp;When my work compelled me to write a website, I jumped on the chance to learn Ruby on Rails, and I never looked back.</p>
<p>
	Having learned the Rails way of doing things, I felt pretty silly about 60cycleCMS. &nbsp;I toyed around with writing a new CMS in Rails, but, let&#39;s face it, why re-invent the wheel? &nbsp;Typo would do most of what I wanted. &nbsp;So, I installed Typo and started hacking. &nbsp;A few things annoyed me about Typo, and the iamrice theme, while being pretty darn awesome, wasn&#39;t exactly what I wanted.&nbsp;</p>
<p>
	davidvg.com is the result of my mods to Typo and iamrice. &nbsp;Now that I&#39;ve got the site running the way I like, hopefully the blog will see a little more action :-). &nbsp;Let me know if you find anything amiss!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Missing foreign key constraints in Rails test database]]></title>
    <link href="http://davidvg.com/2010/04/06/missing-foreign-key-constraints-in-rails-test-database/"/>
    <updated>2010-04-06T00:00:00-04:00</updated>
    <id>http://davidvg.com/2010/04/06/missing-foreign-key-constraints-in-rails-test-database</id>
    <content type="html"><![CDATA[<p>Wondering why your foreign key constraints are never created in your
Rails test database? Chances are you, like me, are creating your
referential integrity constraints using execute calls in a migration.
These database-implementation-specific statements cannot be included in
the DB-independent schema.rb file, so when you run <code>rake test:db:prepare</code>
(or it is called implicitly by <code>rake test</code>), your FK constraints are not
included in the test database.</p>

<p>The workaround to this is simple. In your <code>config/environment.rb</code> file, add
(or uncomment) a line as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">active_record</span><span class="o">.</span><span class="n">schema_format</span> <span class="o">=</span> <span class="ss">:sql</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now Rails will load the test DB structure from
<code>db/development_structure.sql</code>, which should be automatically created
when you run your tests. You can also create it manually using
<code>rake db:structure:dump</code>.</p>

<p><em>Update</em>:</p>

<ul>
<li>I now recommend using the <a href="https://github.com/matthuhiggins/foreigner">foreigner gem</a> to create your foreign keys</li>
<li>In Rails 3, the config option should be put in <code>config/application.rb</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Supposed security vulnerabilities in 60cycleCMS]]></title>
    <link href="http://davidvg.com/2010/03/27/supposed-security-vulnerabilities-in-60cyclecms/"/>
    <updated>2010-03-27T00:00:00-04:00</updated>
    <id>http://davidvg.com/2010/03/27/supposed-security-vulnerabilities-in-60cyclecms</id>
    <content type="html"><![CDATA[<p>
	Googling 60cycleCMS these days brings up a few &quot;security vulnerabilities&quot; that, at first glance, are somewhat alarming. The first alleged vulnerability is generally described as an HTML injection or a persistent XSS (cross-site scripting) vulnerability. Here&#39;s a <a href="http://www.securityfocus.com/bid/38637/info">link</a> to a report (the reports tend to multiply across the web, so there are other sites describing the same exploit).</p>
<p>
	I&#39;m all for transparency and openness in coding, and I&#39;m glad people take time to expose vulnerabilities in others&#39; code. However, this XSS &quot;vulnerability&quot; really needs to be put in context.</p>
<p>
	The XSS exploit states that an attacker can insert malicious HTML or Javascript into an existing post using the &quot;Edit&quot; feature of 60cycleCMS because the user input is unvalidated. While the unvalidated input part of this exploit is true, it is intentional and, when the CMS is installed as intended, does not expose the website to attack. Let me elaborate somewhat. The user input is unvalidated to allow a website author to post any HTML content they want. When I write this post I don&#39;t want to fight my own HTML filters. Secondly, the page in question (private/select.php?act=edit) is a private page, if the exploit author had bothered to read the readme or install the CMS, he would have noticed that install process password protects that area of the site using an .htaccess file. Therefore, only the website author (presumably trusted&#8230;.) may post unfiltered HTML and/or Javascript on the site. If you were to un-protect the private admin section of the site, then this exploit would be possible, but then of course an attacker could do anything they wanted to, whether it be deleting your posts or changing your database configuration. Presumably my users are not stupid enough to leave themselves open this way.</p>
<p>
	The second supposed vulnerability is a remote file inclusion vulnerability. Here&#39;s a <a href="http://securityreason.com/wlb_show/WLB-2009120070">link</a>. Originally posted over at exploit-db.com, this exploit claimed that you could include a remote file in the PHP powering the CMS, thus allowing you to execute arbitrary code on the webserver. The &quot;exploit&quot; centered around overwriting the $_SERVER variable so that the CMS would load the config.php file from another location besides the usual (one level above website root). This vulnerability is just plain false. PHP does not allow a remote user to override the $_SERVER variable, for obvious reasons. There&#39;s an email thread discussing this in more detail <a href="http://attrition.org/pipermail/vim/2009-December/002302.html">here</a>. The exploit has been removed from ExploitDB (I can only assume because it is incorrect), but a few sites around the web still have it up.</p>
<p>
	The point is, don&#39;t believe everything you read on the web. It would seem there&#39;s people out there trying to make us think they&#39;re l33t hackers by exposing security vulnerabilities when, in reality, they don&#39;t do their homework and are sometimes just plain wrong. If you do have any concerns about the security of 60cycleCMS, please <a href="http://60cycle.net/contact.php">contact me</a> or leave a comment, and I will be happy to discuss your concerns.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[60cycleCMS 2.5.1 released]]></title>
    <link href="http://davidvg.com/2010/03/27/60cyclecms-2-5-1-released/"/>
    <updated>2010-03-27T00:00:00-04:00</updated>
    <id>http://davidvg.com/2010/03/27/60cyclecms-2-5-1-released</id>
    <content type="html"><![CDATA[<p>
	I know, two posts about 60cycleCMS in one day :-). Supporting the webmaster over at <a href="http://www.aegamestudios.com/blog.php">aegamestudios</a> while he was installing 60cycleCMS motivated me to put together another release.</p>
<p>
	60cycleCMS 2.5.1, ironically, considering my previous post, does address a potential security vulnerability. While previously I was using a somewhat lame white-list filter to filter input from the URL &quot;post&quot; parameter, I&#39;ve switched to using PHP&#39;s real_escape_string() from mysqli. While I&#39;m not sure of the exact method, I suspect my previous white-list filter could have been bypassed, and an attacker could have done some damage with SQL injection. Using real_escape_string() should completely mitigate this potential vulnerability.</p>
<p>
	This release also includes a custom negative CAPTCHA (in addition to ReCAPTCHA) to protect against spammers with a bunch of human CAPTCHA breakers from some disadvantaged country. Lastly it includes CSS stylesheet listing all the custom classes used by 60cycleCMS, for easier customization (thanks to Madison at aegamestudios.com for that suggestion).</p>
<p>
	As always, you can download the latest zip from the <a href="http://60cycle.net/source/60cycleCMS.php">project page</a>, or checkout the latest code from <a href="http://svn.60cycle.net/60cycleCMS">svn</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[60cycleCMS on aegamestudios.com]]></title>
    <link href="http://davidvg.com/2010/03/18/60cyclecms-on-aegamestudios-com/"/>
    <updated>2010-03-18T00:00:00-04:00</updated>
    <id>http://davidvg.com/2010/03/18/60cyclecms-on-aegamestudios-com</id>
    <content type="html"><![CDATA[<p>
	The webmaster over at <a href="http://www.aegamestudios.com/blog.php">aegamestudios.com</a> recently started using 60cycleCMS to power the blog portion of his site. The site looks great and is a good example of the flexibility and simplicity provided by 60cycleCMS. Check it out!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[High CPU load on CentOS VirtualBox]]></title>
    <link href="http://davidvg.com/2010/02/23/high-cpu-load-on-centos-virtualbox/"/>
    <updated>2010-02-23T00:00:00-05:00</updated>
    <id>http://davidvg.com/2010/02/23/high-cpu-load-on-centos-virtualbox</id>
    <content type="html"><![CDATA[<p>
	A while ago I installed CentOS 5.4 in a VM running in VirtualBox. After installing the Guest Additions, and doing a few setup tasks, I noticed that the VM was almost pegging one core of my dual-core host CPU. The load would periodically drop to about 50%, but then return to 100%. Googling revealed the problem to be the CentOS kernel running at 1000 Hz. I didn&#39;t want to recompile the kernel, but providing an option to GRUB did the trick. Adding &quot;divider=10&quot; to the end of the kernel has been working beautifully. So your menu.lst entry for CentOS should read something like this:<br />
	<br />
	<code>title CentOS (2.6.18-164.6.1.el5)<br />
	&nbsp;&nbsp;&nbsp;root (hd0,0)<br />
	&nbsp;&nbsp;&nbsp;kernel /vmlinuz-2.6.18-164.6.1.el5 ro root=.... rhgb quiet divider=10<br />
	&nbsp;&nbsp;&nbsp;initrd /initrd-2.6.18-164.6.1.el5.img</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wedding website!]]></title>
    <link href="http://davidvg.com/2010/02/02/wedding-website/"/>
    <updated>2010-02-02T00:00:00-05:00</updated>
    <id>http://davidvg.com/2010/02/02/wedding-website</id>
    <content type="html"><![CDATA[I&#8217;ve hinted at another website in the works in previous posts, and it&#8217;s finally gracing the interwebs: davidandjo.org. All the info you could ever want to know about our wedding, and then some. No wedding crashers please :-).
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shout-out to Whaledrop]]></title>
    <link href="http://davidvg.com/2009/12/24/shout-out-to-whaledrop/"/>
    <updated>2009-12-24T00:00:00-05:00</updated>
    <id>http://davidvg.com/2009/12/24/shout-out-to-whaledrop</id>
    <content type="html"><![CDATA[<p>
	Just like to give a shout-out to a former project of mine that&#39;s available for public demo: <a href="http://whaledrop.com">whaledrop.com</a>. Whaledrop is a hosted Digital Asset Management system for individuals and small businesses, and it&#39;s pretty dang cool. Check it out!</p>
<p>
	EDIT: The team at Whaledrop has opened up the Whaledrop Asset Courier for public beta. You can use the Whaledrop Asset Courier to send very large files and private information securely by email. You can also track the status of your email delivery on the Whaledrop web page. I use it, you should too :-).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[60cycleCMS 2.5.0 released!]]></title>
    <link href="http://davidvg.com/2009/12/02/60cyclecms-2-5-0-released/"/>
    <updated>2009-12-02T00:00:00-05:00</updated>
    <id>http://davidvg.com/2009/12/02/60cyclecms-2-5-0-released</id>
    <content type="html"><![CDATA[<p>
	At long last I&#39;ve found some time to work on <a href="http://60cycle.net/source/60cycleCMS.php">60cycleCMS</a>, and version 2.5.0 is the result. A major change in 2.5.0 is the addition of a new visitor comment system. I&#39;ve integrated <a href="http://recaptcha.net">RECAPTCHA</a> and <a href="http://htmlpurifier.org">HTML Purifier</a> to thwart spammers and XSS, respectively. I&#39;ve also allowed for email notifications of new comments. Of course, the comment system is both optional and configurable, meaning you can enable or disable it and its features at will.</p>
<p>
	As always, you can see the latest version in action on this very website. I&#39;ve also notified the admins at <a href="http://php.opensourcecms.com/scripts/details.php?scriptid=337">opensourceCMS</a>, and hopefully a demo of the new version will be available soon.</p>
<p>
	Download the new version from the <a href="http://60cycle.net/source/60cycleCMS.php">project page</a> or <a href="http://sourceforge.net/projects/sixtycyclecms/">SourceForge</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dropbox referral link]]></title>
    <link href="http://davidvg.com/2009/11/26/dropbox-referral-link/"/>
    <updated>2009-11-26T00:00:00-05:00</updated>
    <id>http://davidvg.com/2009/11/26/dropbox-referral-link</id>
    <content type="html"><![CDATA[<p>
	<a href="http://www.dropbox.com">Dropbox</a> has been around for a while, but I hadn&#39;t really been interested in it until my fiancee&#39;s laptop started making strange noises. As a result she&#39;s using my desktop to do some of her work, as well as her (possibly dying) laptop. Not to mention she&#39;s constantly emailing herself files to access them on school computers. So, a backup and sync solution seems to be in order.</p>
<p>
	Having set Dropbox up for both of us, I&#39;m really impressed so far, especially since it works seamlessly with Linux, my platform of choice. Ars Technica has a good <a href="http://arstechnica.com/software/news/2008/09/how-dropbox-ended-my-search-for-seamless-sync-on-linux.ars">review</a> of the service, and many others have jotted down their thoughts, so I&#39;m not going to go any further than saying I like it.</p>
<p>
	If you&#39;re interested in using Dropbox, use this referral link: <a href="https://www.dropbox.com/referrals/NTMyMDkwNDc5">https://www.dropbox.com/referrals/NTMyMDkwNDc5</a>, and we&#39;ll both get an extra 250 MB of storage!</p>
]]></content>
  </entry>
  
</feed>
